<#
 #
 # Copyright (C) 2015 - 2016 Eaton
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License along
 # with this program; if not, write to the Free Software Foundation, Inc.,
 # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 #
 #><#
/*!
 * \file json.ecpp
 * \author Michal Hrusecky <MichalHrusecky@Eaton.com>
 * \author Jim Klimov <EvgenyKlimov@Eaton.com>
 * \brief  Set up the ContentType header and some other parameters for reply
 */
 #><%pre>
#include <locale.h>
#include <stdlib.h>
#include <cxxtools/regex.h>

#include "shared/log.h"
</%pre>
<%cpp>
	// NOTE: json.ecpp is not limited by CHECK_USER_PERMISSIONS_OR_DIE
	//       this file do some basic setup of response
        // CAUTION : All reply HTTP headers are now set by security_headers.ecpp

	// Get rid of locales
	setenv("LANG", "C", 1);
	setlocale(LC_ALL, "C");
	std::setlocale(LC_ALL, "C");
	std::locale default_locale("C");
	reply.out().imbue(default_locale);
	reply.sout().imbue(default_locale);
	reply.uout().imbue(default_locale);

	// Do not let zeromq took away our signals
	setenv("ZSYS_SIGHANDLER", "false", 1);

	// setup BIOS logging
	log_open ();

	// Silence the warning about unused "request" variable
	request.keepAlive();

	// XXX: this is supposed to simplify the application, but as it gets more and more branches
	//      and states, consider setting the content-type for response in each ecpp file
	//      instead

	static cxxtools::Regex rex_license("^/api/v1/admin/license$");
	static cxxtools::Regex rex_export ("^/api/v1/asset/export.*$");
	static cxxtools::Regex rex_licensing ("^/api/v1/admin/licensing$");
	static cxxtools::Regex rex_getlog ("^/api/v1/admin/getlog/.*$");

	if(request.getMethod() == "GET") {
		log_debug("%s", ("GetURL==" + request.getUrl()).c_str() );
        std::string url = request.getUrl ();

		if (rex_license.match(url) || rex_export.match (url) || rex_licensing.match (url) || rex_getlog.match (url))
			log_debug("Will decide on Content-Type later");
		else
			reply.setContentType("application/json;charset=UTF-8");
	} else
		reply.setContentType("application/json;charset=UTF-8");

	return DECLINED;
</%cpp>
